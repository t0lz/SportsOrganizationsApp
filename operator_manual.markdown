# Руководство оператора программы "Спортивные организации"

## Аннотация

Программа "Спортивные организации" — это приложение с графическим интерфейсом, разработанное с использованием PyQt5 и PostgreSQL. Оно предназначено для управления данными спортивных организаций, включая регистрацию и авторизацию пользователей (спортсменов, тренеров, судей и организаторов), а также управление их данными через удобный интерфейс. Программа поддерживает различные роли пользователей с соответствующими правами доступа и обеспечивает взаимодействие с базой данных PostgreSQL.

## Введение

### Область применения

Программа предназначена для спортивных организаций, таких как клубы, ассоциации или федерации, для управления информацией о спортсменах, тренерах, судьях, организаторах и медалях. Она подходит для использования в административных целях, обеспечивая централизованное хранение и обработку данных.

### Основные возможности

- **Регистрация пользователей**: Создание учетных записей для спортсменов, тренеров, судей и организаторов с указанием логина, пароля и личных данных.
- **Авторизация**: Проверка логина и пароля для доступа к функционалу программы в зависимости от роли пользователя.
- **Управление данными**: Добавление, редактирование и удаление записей о спортсменах, тренерах, судьях, организаторах и медалях.
- **Ролевой доступ**: Разграничение прав доступа в зависимости от роли пользователя (например, только организаторы могут редактировать данные).
- **Интуитивный интерфейс**: Графический интерфейс на основе PyQt5 с темной темой и удобной навигацией.
- **Работа с базой данных**: Хранение и обработка данных в PostgreSQL с поддержкой сложных запросов и связей между таблицами.

## Подготовка к работе

### Порядок установки

1. **Скачайте исходный код с GitHub**:

   ```bash
   git clone https://github.com/t0lz/SportsOrganizationsApp
   ```

2. **Перейдите в каталог проекта**:

   ```bash
   cd sportsorganizationsApp
   ```

3. **Создайте виртуальное окружение**:

   ```bash
   python -m venv .venv
   ```

4. **Активируйте виртуальное окружение**:

   **Windows**:

   ```bash
   .\.venv\Scripts\activate
   ```

   **Linux/Mac**:

   ```bash
   source .venv/bin/activate
   ```

5. **Установите зависимости**:

   Установите необходимые библиотеки, включая PyQt5 и Werkzeug:

   ```bash
   pip install pyqt5 werkzeug psycopg2-binary
   ```

   Если в проекте есть файл `requirements.txt`, выполните:

   ```bash
   pip install -r requirements.txt
   ```

6. **Настройте PostgreSQL**:

   - Убедитесь, что PostgreSQL установлен и запущен.
   - Создайте базу данных `db2991_17` и необходимые таблицы (`athletes`, `trainers`, `judges`, `organizers`, `medals`, `venues`, `sports_inventories`) с соответствующими полями, как указано в коде программы.
   - Настройте подключение к базе данных, используя параметры:
     - Имя базы данных: `db2991_17`
     - Пользователь: `st2991`
     - Пароль: `pwd2991`
     - Хост: `172.20.7.53`
     - Порт: `5432`

7. **Альтернативный вариант: использование .exe файла**:

   - Если вы не хотите устанавливать Python и зависимости, скачайте готовый исполнимый файл (.exe) из раздела на GitHub.
   - Запустите .exe файл для запуска приложения (доступно только для Windows).

### Порядок проверки работоспособности (тестирование)

1. **Проверка подключения к базе данных**:
   - Запустите программу (например, через `python SportsOrganizationsApp.py` или .exe файл).
   - Убедитесь, что программа успешно подключается к базе данных PostgreSQL. При ошибке подключения появится сообщение об ошибке в консоли или в интерфейсе.

2. **Тестирование авторизации**:
   - На окне авторизации введите существующий логин и пароль (например, тестовый пользователь из базы данных).
   - Проверьте, открывается ли главное окно с вкладками, соответствующими роли пользователя.

3. **Тестирование регистрации**:
   - Нажмите кнопку "Регистрация" в окне авторизации.
   - Заполните поля (логин, пароль, имя, фамилия, роль) и попробуйте зарегистрировать нового пользователя.
   - Убедитесь, что данные сохраняются в базе данных и пользователь может войти с новыми учетными данными.

4. **Тестирование функционала вкладок**:
   - Для каждой роли проверьте доступные вкладки (например, спортсмены видят только вкладку "Спортсмены", организаторы — все вкладки).
   - Добавьте, измените и удалите запись на каждой вкладке (для организаторов).
   - Проверьте корректность отображения данных в таблицах.

5. **Проверка ограничений доступа**:
   - Убедитесь, что пользователи с ролями "спортсмен", "тренер" или "судья" не могут редактировать или удалять записи, если это не разрешено их ролью.
   - Проверьте, что организаторы имеют полный доступ к редактированию данных.

## Описание операций

- **Авторизация**:
  - Откройте приложение.
  - В окне авторизации введите логин и пароль.
  - Нажмите "Войти". При правильных данных откроется главное окно с вкладками, соответствующими вашей роли.
  - Если данные неверные, появится сообщение об ошибке.

- **Регистрация**:
  - В окне авторизации нажмите "Регистрация".
  - Заполните поля: логин, пароль, имя, фамилия, выберите роль (Спортсмен, Тренер, Судья, Организатор).
  - Нажмите "Зарегистрироваться". При успешной регистрации появится сообщение об успехе, и вы сможете войти с новыми данными.

- **Управление данными**:
  - **Спортсмены** (доступно всем ролям, редактирование — только организаторам):
    - Просмотрите список спортсменов в таблице.
    - Для добавления: заполните поля (имя, фамилия, пол, телефон, дата рождения, разряд, вид спорта) и нажмите "Добавить".
    - Для редактирования: выберите запись в таблице, нажмите "Изменить", обновите данные и сохраните.
    - Для удаления: выберите запись и нажмите "Удалить" (с подтверждением).
  - **Тренеры** (доступно тренерам и организаторам):
    - Аналогично спортсменам, но с полями: имя, фамилия, телефон, вид спорта, категория, дата рождения.
  - **Судьи** (доступно судьям и организаторам):
    - Поля: имя, фамилия, телефон, категория, дата рождения, ID спортсмена, ID медали.
  - **Организаторы** (доступно только организаторам):
    - Поля: имя, фамилия, телефон, email, дата рождения, место, инвентарь.
  - **Медали** (доступно судьям и организаторам):
    - Поля: материал, цвет, вес, количество.

- **Очистка формы**:
  - На каждой вкладке нажмите "Очистить", чтобы сбросить поля ввода.

## Аварийные ситуации

- **Ошибка подключения к базе данных**:
  - **Причина**: Неверные параметры подключения (хост, порт, имя базы, пользователь, пароль) или PostgreSQL не запущен.
  - **Решение**:
    - Проверьте параметры подключения в коде (`Database.__init__`).
    - Убедитесь, что сервер PostgreSQL работает и доступен по адресу `172.20.7.53:5432`.
    - Проверьте правильность имени базы данных (`db2991_17`), пользователя (`st2991`) и пароля (`pwd2991`).

- **Ошибка авторизации**:
  - **Причина**: Неверный логин или пароль.
  - **Решение**: Убедитесь, что введенные данные соответствуют зарегистрированному пользователю. Проверьте раскладку клавиатуры и регистр символов.

- **Ошибка регистрации**:
  - **Причина**: Пользователь с таким логином уже существует или поля заполнены некорректно.
  - **Решение**:
    - Проверьте уникальность логина.
    - Убедитесь, что все обязательные поля заполнены.

- **Ошибка при добавлении/изменении данных**:
  - **Причина**: Некорректные данные (например, неверный формат ID спортсмена или медали, числа вместо текста).
  - **Решение**:
    - Проверьте правильность введенных данных (например, ID должны быть числами).
    - Убедитесь, что связанные записи (например, ID спортсмена или медали) существуют в базе данных.

- **Программа не запускается через .exe**:
  - **Причина**: Отсутствуют зависимости или поврежден .exe файл.
  - **Решение**:
    - Попробуйте запустить программу через Python, чтобы увидеть ошибки.
    - Пересоберите .exe с помощью PyInstaller, убедившись, что все зависимости включены.

- **Интерфейс не отображается корректно**:
  - **Причина**: Проблемы с PyQt5 или отсутствие иконок.
  - **Решение**:
    - Убедитесь, что PyQt5 установлен (`pip install pyqt5`).

## Термины и сокращения

| Термин       | Описание                                                                 |
|--------------|--------------------------------------------------------------------------|
| PyQt5        | Библиотека для создания графических интерфейсов на Python.               |
| PostgreSQL   | Система управления базами данных (СУБД).                                |
| Werkzeug     | Библиотека для работы с WSGI-приложениями, используется для хеширования паролей. |
| .venv        | Виртуальное окружение для изоляции зависимостей проекта.                 |
| .exe         | Исполнимый файл для Windows, созданный для запуска приложения.           |
| psycopg2     | Библиотека для взаимодействия Python с PostgreSQL.                       |
